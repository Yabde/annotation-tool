{"version":3,"sources":["components/NavBar.js","components/AddImage.js","components/Container.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","className","to","isLogged","Fragment","AddImage","class","type","name","onChange","onClick","Container","App","useState","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"oRAqCeA,MAhCf,SAAgBC,GACd,OACE,sBAAKC,UAAU,eAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,IAAD,CAAMC,GAAG,IAAT,+BAEF,qBAAKD,UAAU,cAAf,SACE,cAAC,IAAD,CAAMC,GAAG,OAAT,0BAEF,qBAAKD,UAAU,cAAf,SACE,cAAC,IAAD,CAAMC,GAAG,OAAT,oBAEAF,EAAMG,UACN,eAAC,IAAMC,SAAP,WACE,qBAAKH,UAAU,cAAf,SACE,cAAC,IAAD,CAAMC,GAAG,SAAT,sBAEF,qBAAKD,UAAU,cAAf,SACE,cAAC,IAAD,CAAMC,GAAG,YAAT,2BAILF,EAAMG,UACL,qBAAKF,UAAU,cAAf,SACE,cAAC,IAAD,CAAMC,GAAG,UAAT,uBAGJ,qBAAKD,UAAU,cAAf,wB,MCJSI,MAxBf,WASE,OACE,sBAAKJ,UAAU,WAAf,UACE,yCACA,+BACE,sBAAKK,MAAM,aAAX,UACE,uBAAOC,KAAK,OAAOC,KAAK,aAAaC,SAT7C,eAUQ,wBAAQR,UAAU,gBAAgBM,KAAK,SAASG,QAdxD,aAcQ,6BCNKC,MATf,WACI,OACI,sBAAKV,UAAU,YAAf,UACI,0CACA,cAAC,EAAD,QCcGW,MAff,WAAgB,IAAD,EACmBC,oBAAS,GAD5B,mBACNV,EADM,KAGb,OAHa,KAIX,sBAAKF,UAAU,MAAf,UACE,cAAC,EAAD,CAAQE,SAAUA,IAClB,qBAAKF,UAAU,WAAf,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOa,KAAK,OAAOC,OAAQ,kBAAM,cAAC,EAAD,eCH5BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASV,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFW,SAASC,eAAe,SAM1BX,M","file":"static/js/main.69b6d32c.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './NavBar.css';\n\nfunction NavBar(props) {\n  return (\n    <div className=\"navbar-wrapp\">\n      <div className=\"navbar-title\">\n        <Link to=\"/\">Annotation Tool</Link>\n      </div>\n      <div className=\"navbar-link\">\n        <Link to=\"/all\">All Images</Link>\n      </div>\n      <div className=\"navbar-link\">\n        <Link to=\"/add\">Add</Link>\n      </div>\n      {!props.isLogged && (\n        <React.Fragment>\n          <div className=\"navbar-link\">\n            <Link to=\"/login\">Log In</Link>\n          </div>\n          <div className=\"navbar-link\">\n            <Link to=\"/register\">Register</Link>\n          </div>\n        </React.Fragment>\n      )}\n      {props.isLogged && (\n        <div className=\"navbar-link\">\n          <Link to=\"/logout\">Log Out</Link>\n        </div>\n      )}\n      <div className=\"navbar-link\">Github</div>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from 'react';\n\nimport './AddImage.css';\n\nfunction AddImage() {\n  function submitImage() {\n    return;\n  }\n\n  function handleFileUpload() {\n    return;\n  }\n\n  return (\n    <div className=\"addImage\">\n      <p>AddImage</p>\n      <form>\n        <div class=\"input-file\">\n          <input type=\"file\" name=\"image_file\" onChange={handleFileUpload} />\n          <button className=\"button-submit\" type=\"submit\" onClick={submitImage}>\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default AddImage;\n","import React from 'react'\n\nimport AddImage from './AddImage'\n\nfunction Container() {\n    return (\n        <div className=\"container\">\n            <p>Container</p>\n            <AddImage />\n        </div>\n    )\n}\n\nexport default Container\n","import React, { useState } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport Container from './components/Container';\n\nfunction App() {\n  const [isLogged, setIsLogged] = useState(true);\n\n  return (\n    <div className=\"app\">\n      <NavBar isLogged={isLogged} />\n      <div className=\"app-body\">\n        <Switch>\n          <Route path=\"/all\" render={() => <Container />} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { environment } from './environments/environment';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}